This is the changelog for jom 1.0.1, the parallel make tool.

Changes since jom 1.0.0
- Cleaner and faster determination of targets that must be built.
- Fix incomplete up-to-date check for inference rule targets.
  (QTCREATORBUG-2713)
- Don't filter comments in inline files. (QTCREATORBUG-2874)

Changes since jom 0.9.4
- Inference rule batch mode implemented.
  This improves performance for makefiles that make heavy use of the batch
  mode, e.g. qmake generated makefiles.
- Improved command execution. No more batch file writing.
- Macro substitution implemented. Macro expansions like
  $(TARGET:suffix=d) are now possible.
- .SUFFIXES content is handled properly.
- Fixed several bugs in file name macro expansion.
- Output of concurrent processes is explicitely separated.

Changes since jom 0.9.3
- Opening files from volume mounted to NTFS directory fixed.
  (QTCREATORBUG-1475)
- Output buffering issue fixed. (QTBUG-10798)

Changes since jom 0.9.2
- Support for multiple inline files per command line added.
- Its now possible to use "." as target name. (QTCREATORBUG-1131)
- Support file name macros in the file name part of inline file defitions.
  (QTCREATORBUG-1136)
- Multiple file name macros per command line are possible now.
- Single name macro invokation was added.
  They can be invoked like this: $A instead of $(A).
- Several bugs related to file name macros have been fixed.
- Handle quoted arguments from command files correctly.

Changes since jom 0.9.1
- Fixed conditionals in preprocessor expressions. (QTCREATORBUG-1091)
- Improved parser error messages. Now we see the file, in which the
  error occurred. (QTCREATORBUG-1114)

Changes since jom 0.9.0
- Having too many rules for a target is now a warning and not an error.
- Fixed several bugs in the preprocessor expression parser, e.g.
  QTCREATORBUG-1056.

Changes since jom 0.8.9
- Reset the ERRORLEVEL to zero, if command's exit code should be ignored.
  (QTCREATORBUG-837)
- Command files can be used to pass command line options to jom.
  Usage: jom @commands.txt
- ANTLR isn't used anymore. We're using QLALR to generate the parser for
  preprocessor expressions now. This makes building jom much easier.

